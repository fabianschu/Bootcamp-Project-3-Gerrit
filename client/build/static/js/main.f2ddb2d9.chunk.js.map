{"version":3,"sources":["components/Login.js","services/auth.js","components/Signup.js","components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/Navbar.js","components/Profile.js","components/Map.js","components/Message.js","components/Chat.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","useState","username","password","credentials","setCredentials","error","setError","handleChange","event","target","name","value","Form","onSubmit","preventDefault","axios","post","then","response","data","catch","err","message","console","log","setUser","history","push","Group","Label","htmlFor","Control","type","id","onChange","Alert","variant","Button","Signup","drawerToggleButton","className","onClick","click","toolbar","href","drawerClickHandler","sideDrawer","drawerClasses","show","user","to","delete","clearUser","Fragment","backdrop","Navbar","sideDrawerOpen","setSideDrawerOpen","style","height","marginTop","Profile","quote","editForm","setEditForm","setQuote","date","created_at","useEffect","get","status","slice","put","Map","viewport","width","longitude","latitude","zoom","state","setState","mapboxApiAccessToken","onViewportChange","Message","content","userId","_id","border","backgroundColor","margin","socket","socketIOClient","Chat","input","setInput","display","setDisplay","messages","on","foo","map","index","key","emit","placeholder","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gjBAIA,IA4DeA,EA5DD,SAAAC,GAAU,IAAD,EACiBC,mBAAS,CAC7CC,SAAU,GACVC,SAAU,KAHS,mBACdC,EADc,KACDC,EADC,OAMKJ,mBAAS,IANd,mBAMdK,EANc,KAMPC,EANO,KAQfC,EAAe,SAAAC,GACnBJ,E,yWAAe,CAAD,GACTD,EADS,eAEXK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAmBtC,OACE,6BACE,qCACA,kBAACC,EAAA,EAAD,CAAMC,SAlBW,SAAAL,GCHT,IAACP,EAAUC,EDIrBM,EAAMM,kBCJKb,EDKLE,EAAYF,SCLGC,EDKOC,EAAYD,SCJnCa,IACJC,KAAK,cAAe,CACnBf,SAAUA,EACVC,SAAUA,IAEXe,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,SDL4BF,MAAK,SAAAE,GACjDA,EAAKG,SACPhB,EAASa,EAAKG,SACdC,QAAQC,IAAIL,EAAKG,WAGjBvB,EAAM0B,QAAQN,GAEdpB,EAAM2B,QAAQC,KAAK,eASnB,kBAACf,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAAClB,EAAA,EAAKmB,QAAN,CACEC,KAAK,OACLtB,KAAK,WACLuB,GAAG,WACHtB,MAAOZ,EAAME,SACbiC,SAAU3B,KAGd,kBAACK,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAAClB,EAAA,EAAKmB,QAAN,CACEC,KAAK,WACLtB,KAAK,WACLuB,GAAG,WACHtB,MAAOZ,EAAMG,SACbgC,SAAU3B,KAGbF,GAAS,kBAAC8B,EAAA,EAAD,CAAOC,QAAQ,UAAU/B,GACnC,kBAACgC,EAAA,EAAD,CAAQL,KAAK,UAAb,a,8NEvDR,IA2DeM,EA3DA,SAAAvC,GAAU,IAAD,EACgBC,mBAAS,CAC7CC,SAAU,GACVC,SAAU,KAHU,mBACfC,EADe,KACFC,EADE,OAMIJ,mBAAS,IANb,mBAMfK,EANe,KAMRC,EANQ,KAQhBC,EAAe,SAAAC,GACnBJ,E,yWAAe,IACVD,EADS,eAEXK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAkBtC,OACE,6BACE,uCACA,kBAACC,EAAA,EAAD,CAAMC,SAjBW,SAAAL,GDjBR,IAACP,EAAUC,ECkBtBM,EAAMM,kBDlBMb,ECmBLE,EAAYF,SDnBGC,ECmBOC,EAAYD,SDlBpCa,IACJC,KAAK,eAAgB,CACpBf,SAAUA,EACVC,SAAUA,IAEXe,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIH,SAASC,SCS6BF,MAAK,SAAAE,GAClDA,EAAKG,QACPhB,EAASa,EAAKG,UAGdvB,EAAM0B,QAAQN,GAEdpB,EAAM2B,QAAQC,KAAK,eASnB,kBAACf,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAAClB,EAAA,EAAKmB,QAAN,CACEC,KAAK,OACLtB,KAAK,WACLuB,GAAG,WACHtB,MAAOZ,EAAME,SACbiC,SAAU3B,KAGd,kBAACK,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAAClB,EAAA,EAAKmB,QAAN,CACEC,KAAK,WACLtB,KAAK,WACLuB,GAAG,WACHtB,MAAOZ,EAAMG,SACbgC,SAAU3B,KAGbF,GAAS,kBAAC8B,EAAA,EAAD,CAAOC,QAAQ,UAAU/B,GACnC,kBAACgC,EAAA,EAAD,CAAQL,KAAK,UAAb,cC9COO,G,OARY,SAAAxC,GAAK,OAC5B,4BAAQyC,UAAU,gBAAgBC,QAAS1C,EAAM2C,OAC7C,yBAAKF,UAAU,wBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,2BCcRG,G,OAjBC,SAAA5C,GAAK,OACnB,4BAAQyC,UAAU,WAChB,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBAAgB,uBAAGI,KAAK,KAAR,WAC/B,yBAAKJ,UAAU,0BACX,kBAAC,EAAD,CAAoBE,MAAO3C,EAAM8C,sBAErC,yBAAKL,UAAU,4BACX,4BACI,4BAAI,uBAAGI,KAAK,KAAR,aACJ,4BAAI,uBAAGA,KAAK,KAAR,gB,QC0BLE,G,OAlCI,SAAA/C,GACjB,IAMIgD,EAAgB,cAMpB,OAJIhD,EAAMiD,OACRD,EAAgB,oBAIhB,yBAAKP,UAAWO,GACbhD,EAAMkD,KACL,oCACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,IAAIT,QAnBA,WJwBrB1B,IAAMoC,OAAO,gBItBX5B,QAAQC,IAAI,QAASzB,GACrBA,EAAMqD,UAAU,QAgBV,WAKF,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAMH,GAAG,WAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,cC1BKI,G,OAJE,SAAAvD,GAAK,OAClB,yBAAKyC,UAAU,WAAWC,QAAS1C,EAAM2C,UCgC9Ba,EAhCA,SAAAxD,GACbwB,QAAQC,IAAI,SAAUzB,GADA,IAYlBuD,EAZkB,EAEsBtD,oBAAS,GAF/B,mBAEfwD,EAFe,KAECC,EAFD,KAkBtB,OAJID,IACFF,EAAW,kBAAC,EAAD,CAAUZ,MAPM,SAAAlC,GAC3BiD,GAAkB,OAUlB,yBAAKC,MAAO,CAAEC,OAAQ,SACpB,kBAAC,EAAD,CAASd,mBAhBoB,SAAArC,GAC/BiD,GAAmBD,MAgBjB,kBAAC,EAAD,CACER,KAAMQ,EACNP,KAAMlD,EAAMkD,KACZG,UAAWrD,EAAMqD,YAElBE,EACD,0BAAMI,MAAO,CAAEE,UAAW,YCsEjBC,EAlGC,SAAA9D,GAAU,IAAD,EACCC,mBAAS,CAC/B8D,MAAO,KAFc,mBAChBb,EADgB,KACVxB,EADU,OAISzB,oBAAS,GAJlB,mBAIhB+D,EAJgB,KAINC,EAJM,OAKGhE,mBAAS,IALZ,mBAKhB8D,EALgB,KAKTG,EALS,KAOvB1C,QAAQC,IAAIzB,EAAMkD,MAClB,IAAMiB,EAAOnE,EAAMkD,KAAKkB,WAGxBC,qBAAU,WACR7C,QAAQC,IAAI,aACZT,IACGsD,IAAI,YACJpD,MAAK,SAAAC,GACJK,QAAQC,IAAIN,EAASC,MACrBM,EAAQP,EAASC,SAElBC,OAAM,SAAAC,GACuB,MAAxBA,EAAIH,SAASoD,QACf/C,QAAQC,IAAIH,QAIjB,IAEH+C,qBAAU,WACR7C,QAAQC,IAAI,4BACX,CAACsC,IAEJM,qBAAU,WACR7C,QAAQC,IAAI,wBACX,IAEH4C,qBAAU,WACR,OAAO,WACL7C,QAAQC,IAAI,cAEb,IA2BH,OADAD,QAAQC,IAAIyB,GAEV,6BACE,4CACA,4BAAKlD,EAAMkD,KAAKhD,UAIhB,8CACkB,IACfiE,EAAKK,MAAM,EAAG,IAAM,IAAML,EAAKK,MAAM,EAAG,GAAK,IAAML,EAAKK,MAAM,EAAG,IAEnEtB,EAAKa,OAAS,4BAAKb,EAAKa,OAIzB,4BAAQrB,QAxCW,WAErBuB,GAAaD,KAsCX,gBACA,kBAACnD,EAAA,EAAD,CAAMC,SA/BW,SAAAL,GACnBA,EAAMM,iBACNS,QAAQC,IAAI,QAAS,CAAEsC,UACvB/C,IACGyD,IAAI,WAAY,CAAEV,UAClB7C,MAAK,SAAAC,GACJO,EAAQP,EAASC,MACjB8C,EAAS/C,EAASC,KAAK2C,OACvBvC,QAAQC,IAAI,kBAAmBN,EAASC,SAEzCC,OAAM,SAAAC,GACLE,QAAQC,IAAIH,QAqBZ,4CACA,kBAACT,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CAAYC,QAAQ,SAApB,WACA,kBAAClB,EAAA,EAAKmB,QAAN,CACEC,KAAK,OACLtB,KAAK,cACLC,MAAOmD,EACP5B,SA5CW,SAAA1B,GAEnByD,EAASzD,EAAMC,OAAOE,WA6ClB,kBAAC0B,EAAA,EAAD,CAAQL,KAAK,UAAb,W,QClEOyC,EAzBH,WAAO,IAAD,EACUzE,mBAAS,CACjC0E,SAAU,CACRC,MAAO,IACPhB,OAAQ,IACRiB,UAAW,UACXC,SAAU,UACVC,KAAM,MAPM,mBACTC,EADS,KACFC,EADE,KAUhB,OACE,yBAAKxC,UAAU,gBACb,wBAAIP,GAAG,aAAP,kBACA,yBAAKO,UAAU,OACb,kBAAC,IAAD,eACEyC,qBACE,4FAEEF,EAAML,SAJZ,CAKEQ,iBAAkB,SAAAR,GAAQ,OAAIM,EAAS,CAAEN,oB,QCQpCS,EA/BC,SAAApF,GAEdwB,QAAQC,IAAIzB,EAAMkD,MAClB1B,QAAQC,IAAIzB,EAAMuB,SAHK,MAIuBvB,EAAMuB,QAA/CrB,EAJkB,EAIlBA,SAAUmF,EAJQ,EAIRA,QAASjB,EAJD,EAICA,WAAYkB,EAJb,EAIaA,OACpClB,EAAaA,EAAWI,MAAM,GAAG,IAiBjC,OACE,yBAAKb,MAAO3D,EAAMkD,KAAKqC,MAAQD,EAThB,CACfE,OAAQ,kBACRC,gBAAiB,SAChBC,OAAQ,gBACTd,MAAO,QAXY,CACnBY,OAAQ,kBACRC,gBAAiB,QACjBC,OAAQ,gBACRd,MAAO,SAaL,wCAAc1E,GACd,uCAAamF,GACb,oCAAUjB,KCtBVuB,E,MAASC,GADE,yBA0EFC,EAvEF,SAAA7F,GAAU,IAAD,EACMC,mBAAS,IADf,mBACb6F,EADa,KACNC,EADM,OAEI9F,mBAAS,IAFb,mBAEbiD,EAFa,KAEPxB,EAFO,OAGUzB,mBAAS,IAHnB,mBAGb+F,EAHa,KAGJC,EAHI,KAYpB5B,qBAAU,WACR3C,EAAQ1B,EAAMkD,MAEdlC,IACGsD,IAAI,SACJpD,MAAK,SAAAgF,GACJ1E,QAAQC,IAAIyE,EAAS9E,MACrB6E,EAAWC,EAAS9E,SAErBC,OAAM,SAAAC,GAAG,OAAIE,QAAQC,IAAIH,MAE5BqE,EAAOQ,GAAG,WAAW,SAAAC,GACnBpF,IACGsD,IAAI,SACJpD,MAAK,SAAAgF,GACJ1E,QAAQC,IAAIyE,EAAS9E,MACrB6E,EAAWC,EAAS9E,SAErBC,OAAM,SAAAC,GAAG,OAAIE,QAAQC,IAAIH,WAE7B,IAiBH,OACE,yBAAKqC,MAAO,CAAE8B,gBAAiB,SAC7B,wCACA,6BACGO,EAAQK,KAAI,SAAC9E,EAAS+E,GACrB,OAAO,kBAAC,EAAD,CAASpD,KAAMA,EAAM3B,QAASA,EAASgF,IAAKD,QAGvD,0BAAMxF,SAvBW,SAAAL,GACnBA,EAAMM,iBAMNC,IACGC,KAAK,QAAS,CAAEM,QAASuE,EAAO5C,KAAMA,IACtChC,MAAK,kBAAMyE,EAAOa,KAAK,UAAWV,MAClCzE,OAAM,SAAAC,GAAG,OAAIE,QAAQC,IAAIH,MAE5ByE,EAAS,MAYL,2BACE9D,KAAK,OACLtB,KAAK,QACLC,MAAOkF,EACPW,YAAY,wBACZtE,SA1DkB,SAAA1B,GACxBsF,EAAStF,EAAMC,OAAOE,UA2DlB,4BAAQqB,KAAK,UAAb,aCdOyE,EAhDH,SAAA1G,GAAU,IAAD,EACKC,mBAASD,EAAMkD,MADpB,mBACZA,EADY,KACNxB,EADM,KAGnB,OACE,yBAAKe,UAAU,OACb,kBAAC,EAAD,CAAQS,KAAMA,EAAMG,UAAW3B,IAC/B,kBAAC,IAAD,CACEiF,OAAK,EACLC,KAAK,UACLC,OAAQ,SAAA7G,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmB0B,QAASA,QAE/C,kBAAC,IAAD,CACEiF,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAA7G,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkB0B,QAASA,QAE9C,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,QAChB,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAQ1D,KAAMA,EAAMG,UAAW3B,IAC/B,kBAAC,IAAD,CACEiF,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAA7G,GAEN,OAAIkD,EACK,kBAAC,EAAD,iBAAUlD,EAAV,CAAiBkD,KAAMA,KAEvB,kBAAC,IAAD,CAAUC,GAAG,SAI1B,kBAAC,IAAD,CACEwD,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAA7G,GAEN,OAAIkD,EACK,kBAAC,EAAD,iBAAalD,EAAb,CAAoBkD,KAAMA,KAE1B,kBAAC,IAAD,CAAUC,GAAG,WCvCZ2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCTNlG,IAAMsD,IAAI,kBAAkBpD,MAAK,SAAAC,GAC/B,IAAM+B,EAAO/B,EAASC,KACtBI,QAAQC,IAAIyB,GACZiE,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAK3D,KAAMA,KAEbkE,SAASC,eAAe,YDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtG,MAAK,SAAAuG,GACjCA,EAAaC,iB","file":"static/js/main.f2ddb2d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { login } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nconst Login = props => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const handleChange = event => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    login(credentials.username, credentials.password).then(data => {\n      if (data.message) {\n        setError(data.message);\n        console.log(data.message);\n      } else {\n        // lift the data up to the App state\n        props.setUser(data);\n        //redirect\n        props.history.push(\"/chat\")\n      }\n    });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username: </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={props.username}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password: </Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={props.password}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </div>\n  );\n};\nexport default Login;\n","import axios from \"axios\";\n\nconst signup = (username, password) => {\n  return axios\n    .post(\"/auth/signup\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\n\nconst logout= () => {\n  axios.delete(\"/auth/logout\");\n}\n\nexport {\n  signup,\n  login,\n  logout\n};","import React, { useState } from \"react\";\nimport { signup } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nconst Signup = props => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const handleChange = event => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    signup(credentials.username, credentials.password).then(data => {\n      if (data.message) {\n        setError(data.message);\n      } else {\n        // lift the data up to the App state\n        props.setUser(data);\n        //redirect\n        props.history.push(\"/chat\");\n      }\n    });\n  };\n\n  return (\n    <div>\n      <h2>Sign up</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username: </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={props.username}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password: </Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={props.password}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n    </div>\n  );\n};\nexport default Signup;\n","import React from 'react';\n\nimport './DrawerToggleButton.css';\n\nconst drawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n    </button>\n);\n\nexport default drawerToggleButton;","import React from 'react';\n\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\nimport './Toolbar.css';\n\nconst toolbar = props => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n        <div className=\"toolbar__logo\"><a href=\"/\">Gerrit</a></div>\n        <div className=\"toolbar__toggle-button\">\n            <DrawerToggleButton click={props.drawerClickHandler} />\n        </div>\n        <div className=\"toolbar_navigation-items\">\n            <ul>\n                <li><a href=\"/\">Products</a></li>\n                <li><a href=\"/\">Users</a></li>\n            </ul>\n        </div>\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../services/auth\";\nimport { Navbar as Nav } from \"react-bootstrap\";\n\nimport \"./SideDrawer.css\";\n\nconst sideDrawer = props => {\n  const handleLogout = () => {\n    logout();\n    console.log(\"props\", props);\n    props.clearUser(null);\n  };\n\n  let drawerClasses = \"side-drawer\";\n\n  if (props.show) {\n    drawerClasses = \"side-drawer open\";\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      {props.user ? (\n        <>\n          <Link to=\"/profile\">Profile </Link>\n          <Link to=\"/\">Chat </Link>\n          <Link to=\"/\">Map </Link>\n          <Link to=\"/\" onClick={handleLogout}>\n            Logout\n          </Link>\n        </>\n      ) : (\n        <React.Fragment>\n          <Link to=\"/signup\">Signup </Link>\n          <Link to=\"/login\">Login </Link>\n        </React.Fragment>\n      )}\n    </nav>\n  );\n};\n\nexport default sideDrawer;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click} />\n);\n\nexport default backdrop;","import React, { useState } from \"react\";\nimport Toolbar from \"./Toolbar/Toolbar\";\nimport SideDrawer from \"./SideDrawer/SideDrawer\";\nimport Backdrop from \"./Backdrop/Backdrop\";\n\nconst Navbar = props => {\n  console.log(\"navbar\", props);\n  const [sideDrawerOpen, setSideDrawerOpen] = useState(false);\n\n  const drawerToggleClickHandler = event => {\n    setSideDrawerOpen(!sideDrawerOpen);\n  };\n\n  const backdropClickHandler = event => {\n    setSideDrawerOpen(false);\n  };\n\n  let backdrop;\n\n  if (sideDrawerOpen) {\n    backdrop = <Backdrop click={backdropClickHandler} />;\n  }\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n      <SideDrawer\n        show={sideDrawerOpen}\n        user={props.user}\n        clearUser={props.clearUser}\n      />\n      {backdrop}\n      <main style={{ marginTop: \"64px\" }}></main>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst Profile = props => {\n  const [user, setUser] = useState({\n    quote: \"\"\n  });\n  const [editForm, setEditForm] = useState(false);\n  const [quote, setQuote] = useState(\"\");\n\n  console.log(props.user);\n  const date = props.user.created_at;\n\n  // first mount\n  useEffect(() => {\n    console.log(\"did mount\");\n    axios\n      .get(\"/profile\")\n      .then(response => {\n        console.log(response.data);\n        setUser(response.data);\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          console.log(err);\n          // setError(err.response.data.message);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Quote is being changed\");\n  }, [quote]);\n\n  useEffect(() => {\n    console.log(\"mounted or updated\");\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, []);\n\n  const toggleEditForm = () => {\n    // edit form when button is clicked\n    setEditForm(!editForm);\n  };\n\n  const handleChange = event => {\n    // console.log(event.target.value);\n    setQuote(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"quote\", { quote });\n    axios\n      .put(\"/profile\", { quote })\n      .then(response => {\n        setUser(response.data);\n        setQuote(response.data.quote);\n        console.log(\"resssssssssssss\", response.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  console.log(user);\n  return (\n    <div>\n      <h1>Profile page</h1>\n      <h2>{props.user.username}</h2>\n      {/* if quote exist, show, same for picture */}\n      {/* <h2>quote</h2> */}\n      {/* <h2>upload picture</h2> */}\n      <h2>\n        gerriting since{\" \"}\n        {date.slice(8, 10) + \"-\" + date.slice(5, 7) + \"-\" + date.slice(0, 4)}\n      </h2>\n      {user.quote && <h5>{user.quote}</h5>}\n      {/* amount of messages send */}\n      {/* friends?? */}\n      {/* button for editing profile */}\n      <button onClick={toggleEditForm}>Edit profile</button>\n      <Form onSubmit={handleSubmit}>\n        <h2>Edit Profile</h2>\n        <Form.Group>\n          <Form.Label htmlFor=\"quote\">Quote: </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"description\"\n            value={quote}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Button type=\"submit\">Edit</Button>\n      </Form>\n    </div>\n  );\n};\nexport default Profile;\n","import React, { useState } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport \"../App.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { Container } from \"react-bootstrap\";\n\nconst Map = () => {\n  const [state, setState] = useState({\n    viewport: {\n      width: 400,\n      height: 600,\n      longitude: 13.410824,\n      latitude: 52.503441,\n      zoom: 13\n    }\n  });\n  return (\n    <div className=\"mapContainer\">\n      <h1 id=\"mapHeader\">All live walls</h1>\n      <div className=\"map\">\n        <ReactMapGL\n          mapboxApiAccessToken={\n            \"pk.eyJ1IjoiYXJlc2FuIiwiYSI6ImNrM3UzYWxjbzAyYWMzbHRkYThjeGU3ODMifQ.uMuoyhCcGP0EXyd_f-oS0g\"\n          }\n          {...state.viewport}\n          onViewportChange={viewport => setState({ viewport })}\n        />\n      </div>\n    </div>\n  );\n};\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\n\nconst Message = props => {\n  \n  console.log(props.user);\n  console.log(props.message);\n  let {username, content, created_at, userId} = props.message;\n  created_at = created_at.slice(11,16);\n\n  const generalStyle = {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    margin: \"10px 0 10px 0\",\n    width: \"80vw\"\n  }\n\n  const ownStyle = {\n    border: \"1px solid black\",\n    backgroundColor: \"yellow\",\n     margin: \"10px 0 10px 0\",\n    width: \"80vw\"\n  }\n\n  \n  return(\n    <div style={props.user._id === userId ? ownStyle : generalStyle}>\n      <p>Username: {username}</p>\n      <p>Message: {content}</p>\n      <p>Time: {created_at}</p>\n    </div>\n  )\n}\n\nexport default Message;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\nimport Message from \"./Message\";\n\nconst endpoint = \"http://localhost:5555\"; // socket io connection\nconst socket = socketIOClient(endpoint);\n\nconst Chat = props => {\n  const [input, setInput] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [display, setDisplay] = useState([]);\n\n  const handleInputChange = event => {\n    setInput(event.target.value);\n    /////SOCKET\n  };\n\n  //when the component is mounted, it starts listening for events of the type \"message\"\n  //if such an event is noticed, the state \"display\" is changegd, so that the messageg is displayed above the input form\n  useEffect(() => {\n    setUser(props.user);\n\n    axios\n      .get(\"/chat\")\n      .then(messages => {\n        console.log(messages.data);\n        setDisplay(messages.data);\n      })\n      .catch(err => console.log(err));\n\n    socket.on(\"message\", foo => {\n      axios\n        .get(\"/chat\")\n        .then(messages => {\n          console.log(messages.data);\n          setDisplay(messages.data);\n        })\n        .catch(err => console.log(err));\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    //when the form is submitted a message is emitted\n\n    // console.log(req.user);\n    // console.log(event);\n    axios\n      .post(\"/chat\", { message: input, user: user })\n      .then(() => socket.emit(\"message\", input))\n      .catch(err => console.log(err));\n    // clean form after message is sent\n    setInput(\"\");\n  };\n\n  return (\n    <div style={{ backgroundColor: \"pink\" }}>\n      <h1>Chatroom</h1>\n      <div>\n        {display.map((message, index) => {\n          return <Message user={user} message={message} key={index} />;\n        })}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"input\"\n          value={input}\n          placeholder=\"Type something here..\"\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./components/Profile\";\nimport Map from \"./components/Map\";\nimport Chat from \"./components/Chat\";\n\nconst App = props => {\n  const [user, setUser] = useState(props.user);\n\n  return (\n    <div className=\"App\">\n      <Navbar user={user} clearUser={setUser} />\n      <Route\n        exact\n        path=\"/signup\"\n        render={props => <Signup {...props} setUser={setUser} />}\n      />\n      <Route\n        exact\n        path=\"/login\"\n        render={props => <Login {...props} setUser={setUser} />}\n      />\n      <Route exact path=\"/map\">\n        <Map />\n      </Route>\n      <Navbar user={user} clearUser={setUser} />\n      <Route\n        exact\n        path=\"/chat\"\n        render={props => {\n          // only users can get into chat\n          if (user) {\n            return <Chat {...props} user={user} />;\n          } else {\n            return <Redirect to=\"/\" />;\n          }\n        }}\n      />\n      <Route\n        exact\n        path=\"/profile\"\n        render={props => {\n          // only users can get into chat\n          if (user) {\n            return <Profile {...props} user={user} />;\n          } else {\n            return <Redirect to=\"/\" />;\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/auth/loggedin\").then(response => {\n  const user = response.data;\n  console.log(user);\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}